// Copyright 2021 NetApp, Inc. All Rights Reserved.
// Licensed under the Apache License, Version 2.0.

// This pipeline enables Coverity static application security testing on BeeGFS CSI driver Go components. It is
// written to automatically run nightly. For now, configure Jenkins to detect and run it only on the master branch. It
// may be possible to extend scanning to other branches if the need arises.

pipeline {
    agent any

    triggers {
        // Run sometime between 12:00 AM and 3:59 AM daily.
        cron('H H(0-3) * * *')
    }

    options {
        timestamps()
        timeout(time: 2, unit: 'HOURS')
        buildDiscarder(logRotator(artifactNumToKeepStr: '15'))
    }

    environment {
        WORKSPACE = "${env.WORKSPACE}"
        COVERITY_HOSTNAME="coverity.cls.eng.netapp.com"
        COVERITY_PORT=9090
        COVERITY_CREDS= credentials('coverity-creds') // stored in Jenkins
        COVERITY_STREAM='BeeGFS_CSI_Driver'
        CA_FILE= credentials('coverity-certs') // stored in Jenkins
        ANALYSIS_TOOLS_BIN="/usr/local/cov-analysis-linux64/bin" // pre-installed on Jenkins nodes
        INTERMEDIATE_DIR="$WORKSPACE/CoverityIDIR"
        CONFIG_FILE="$WORKSPACE/coverityconfig/coverity_config.xml"
    }

    stages {
        stage('Coverity Scan') {
            steps {
                // NetApp developers, please refer to
                // https://confluence.ngage.netapp.com/display/DEVTS/Coverity+Scan+Process for details about the
                // Coverity scan process/commands

                echo "Run cov-configure to configure Coverity compiler for Go..."
                sh '$ANALYSIS_TOOLS_BIN/cov-configure --config $CONFIG_FILE --go'

                // cov-build intercepts all "go build" commands and generates a modified binary in INTERMEDIATE_DIR
                // that can be analyzed by cov-analyze.
                echo "Run cov-build for all Go components (chwrap, driver, operator)"
                sh '$ANALYSIS_TOOLS_BIN/cov-build  --dir $INTERMEDIATE_DIR --config $CONFIG_FILE bash -c "make build-chwrap build-beegfs-csi-driver; cd operator && make build"'

                echo "Run cov-analyze on the intermediate code under <INTERMEDIATE_DIR>..."
                sh '$ANALYSIS_TOOLS_BIN/cov-analyze --dir $INTERMEDIATE_DIR --strip-path $WORKSPACE --all'

                echo "Run cov-commit-defects to push the analysis results to Coverity"
                sh '$ANALYSIS_TOOLS_BIN/cov-commit-defects --dir $INTERMEDIATE_DIR --url "https://coverity.cls.eng.netapp.com" --user $COVERITY_CREDS_USR --password $COVERITY_CREDS_PSW --certs $CA_FILE --stream $COVERITY_STREAM'
            }
        }
    }

    post {
        cleanup {
            deleteDir()
        }
    }
}
